<svg xmlns="http://www.w3.org/2000/svg" width="600" height="450" fill="none" viewBox="0 0 600 450">
  <!-- Original from https://css-tricks.com/how-i-made-a-pure-css-puzzle-game/ -->
  <foreignObject width="100%" height="100%">
    <div xmlns="http://www.w3.org/1999/xhtml" class="container">
      <!-- <h1>CSS Puzzle</h1> -->
      <p>drag &amp; drop the piece into...</p>
      <p>Well, you know how a puzzle works</p>
      <g style="--i:url(./wallpaper.jpg)">
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
        <z><a></a><b draggable="true"></b></z>
      </g>
    </div>
  </foreignObject>
  <defs>
    <style type="text/css">
      /* number of columns/rows, don't forget to adjust the HTML value */
      g {
        --s: 200px;
        /* size of the puzzle */
        display: grid;
        max-width: var(--s);
        border: 1px solid;
        margin: auto;
        grid-template-columns: repeat(4, 1fr)
      }

      g:before {
        content: 'Original';
        color: #fff;
        font-size: 25px;
        font-weight: 700;
        text-shadow: 0 0 2px #000, 0 0 2px #000, 0 0 2px #000;
        position: fixed;
        top: 10px;
        left: 10px;
        width: calc(var(--s)*.6);
        aspect-ratio: 1;
        -webkit-mask: repeating-linear-gradient(-45deg, #000 0 10%, #000d 0 20%);
        background: var(--i) 0/100% 100%;
        display: grid;
        place-content: center
      }

      z {
        aspect-ratio: 1;
        outline: 1px dashed;
        display: grid;
        position: relative;
        pointer-events: none
      }

      a {
        grid-area: 1/1;
        width: 0;
        transition: 0s 0.2s;
        pointer-events: initial
      }

      b {
        grid-area: 1/1;
        pointer-events: initial;
        background: var(--i) 0/var(--s) var(--s);
        box-shadow: 0 0 4px 1px red;
        z-index: 2;
        cursor: grab
      }

      z:nth-of-type(1) b {
        background-position: 0 0;
        transform: translate(150%, 150%) rotate(142deg) translate(382%) rotate(-138deg)
      }

      z:nth-of-type(2) b {
        background-position: 33.3333333333% 0;
        transform: translate(50%, 150%) rotate(88deg) translate(377%) rotate(-95deg)
      }

      z:nth-of-type(3) b {
        background-position: 66.6666666667% 0;
        transform: translate(-50%, 150%) rotate(101deg) translate(394%) rotate(-98deg)
      }

      z:nth-of-type(4) b {
        background-position: 100% 0;
        transform: translate(-150%, 150%) rotate(113deg) translate(314%) rotate(-106deg)
      }

      z:nth-of-type(5) b {
        background-position: 0 33.3333333333%;
        transform: translate(150%, 50%) rotate(140deg) translate(347%) rotate(-135deg)
      }

      z:nth-of-type(6) b {
        background-position: 33.3333333333% 33.3333333333%;
        transform: translate(50%, 50%) rotate(133deg) translate(324%) rotate(-131deg)
      }

      z:nth-of-type(7) b {
        background-position: 66.6666666667% 33.3333333333%;
        transform: translate(-50%, 50%) rotate(59deg) translate(331%) rotate(-63deg)
      }

      z:nth-of-type(8) b {
        background-position: 100% 33.3333333333%;
        transform: translate(-150%, 50%) rotate(113deg) translate(351%) rotate(-119deg)
      }

      z:nth-of-type(9) b {
        background-position: 0 66.6666666667%;
        transform: translate(150%, -50%) rotate(173deg) translate(319%) rotate(-181deg)
      }

      z:nth-of-type(10) b {
        background-position: 33.3333333333% 66.6666666667%;
        transform: translate(50%, -50%) rotate(143deg) translate(383%) rotate(-143deg)
      }

      z:nth-of-type(11) b {
        background-position: 66.6666666667% 66.6666666667%;
        transform: translate(-50%, -50%) rotate(57deg) translate(358%) rotate(-61deg)
      }

      z:nth-of-type(12) b {
        background-position: 100% 66.6666666667%;
        transform: translate(-150%, -50%) rotate(87deg) translate(353%) rotate(-79deg)
      }

      z:nth-of-type(13) b {
        background-position: 0 100%;
        transform: translate(150%, -150%) rotate(6deg) translate(364%) rotate(-15deg)
      }

      z:nth-of-type(14) b {
        background-position: 33.3333333333% 100%;
        transform: translate(50%, -150%) rotate(27deg) translate(355%) rotate(-32deg)
      }

      z:nth-of-type(15) b {
        background-position: 66.6666666667% 100%;
        transform: translate(-50%, -150%) rotate(44deg) translate(314%) rotate(-51deg)
      }

      z:nth-of-type(16) b {
        background-position: 100% 100%;
        transform: translate(-150%, -150%) rotate(142deg) translate(310%) rotate(-136deg)
      }

      z b {
        transition: 9999s 9999s
      }

      z:active a {
        width: 100%;
        transition: 0s
      }

      z a:hover~b {
        transform: translate(0);
        box-shadow: none;
        transition: 0s
      }

      .container {
        background: 0 0;
        color: #fff;
        font-family: system-ui, sans-serif
      }

      @media (prefers-color-scheme:light) {
        .container {
          color: #000
        }
      }

      p {
        font-size: 1.2rem;
        text-align: center
      }
    </style>
  </defs>
</svg>